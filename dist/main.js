/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/block.js":
/*!**********************!*\
  !*** ./src/block.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Block {\n  constructor(options) {\n    this.game = options.game;\n    this.x = options.x;\n    this.y = options.y;\n    this.ctx = options.ctx;\n    this.color = Block.getRandomColor(Block.COLORS);\n    this.dims = Block.DIMS;\n    this.vel = 0;\n  }\n  static DIMS = 50;\n  static COLORS = [\"#FF0000\", \"#00FF00\", \"#0000FF\"];\n  static GRAVITY = 0.0005;\n  static getRandomColor(arr) {\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    return arr[randomIndex];\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x * this.dims, this.y * this.dims, this.dims, this.dims);\n  }\n  update() {\n    // floor collision\n    const blockBottom = this.y + Block.DIMS;\n    const floor = this.game.dimY;\n    if (blockBottom < floor) {\n      this.y += this.vel;\n      this.vel += Block.GRAVITY;\n    } else {\n      this.vel = 0;\n    }\n  }\n  animate(ctx) {\n    this.update();\n    this.draw(ctx);\n  }\n  bounds() {\n    return {\n      top: this.y * this.dims,\n      bottom: (this.y + 1) * this.dims\n    };\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Block);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmxvY2suanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLEtBQUssQ0FBQztFQUNSQyxXQUFXQSxDQUFDQyxPQUFPLEVBQUU7SUFDakIsSUFBSSxDQUFDQyxJQUFJLEdBQUdELE9BQU8sQ0FBQ0MsSUFBSTtJQUN4QixJQUFJLENBQUNDLENBQUMsR0FBR0YsT0FBTyxDQUFDRSxDQUFDO0lBQ2xCLElBQUksQ0FBQ0MsQ0FBQyxHQUFHSCxPQUFPLENBQUNHLENBQUM7SUFDbEIsSUFBSSxDQUFDQyxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0ksR0FBRztJQUN0QixJQUFJLENBQUNDLEtBQUssR0FBR1AsS0FBSyxDQUFDUSxjQUFjLENBQUNSLEtBQUssQ0FBQ1MsTUFBTSxDQUFDO0lBQy9DLElBQUksQ0FBQ0MsSUFBSSxHQUFHVixLQUFLLENBQUNXLElBQUk7SUFDdEIsSUFBSSxDQUFDQyxHQUFHLEdBQUcsQ0FBQztFQUNoQjtFQUVBLE9BQU9ELElBQUksR0FBRyxFQUFFO0VBQ2hCLE9BQU9GLE1BQU0sR0FBRyxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2pELE9BQU9JLE9BQU8sR0FBRyxNQUFNO0VBRXZCLE9BQU9MLGNBQWNBLENBQUNNLEdBQUcsRUFBRTtJQUN2QixNQUFNQyxXQUFXLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sQ0FBQyxDQUFDLEdBQUdKLEdBQUcsQ0FBQ0ssTUFBTSxDQUFDO0lBQzFELE9BQU9MLEdBQUcsQ0FBQ0MsV0FBVyxDQUFDO0VBQzNCO0VBRUFLLElBQUlBLENBQUNkLEdBQUcsRUFBRTtJQUNOQSxHQUFHLENBQUNlLFNBQVMsR0FBRyxJQUFJLENBQUNkLEtBQUs7SUFDMUJELEdBQUcsQ0FBQ2dCLFFBQVEsQ0FBQyxJQUFJLENBQUNsQixDQUFDLEdBQUcsSUFBSSxDQUFDTSxJQUFJLEVBQUUsSUFBSSxDQUFDTCxDQUFDLEdBQUcsSUFBSSxDQUFDSyxJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJLENBQUM7RUFDOUU7RUFFQWEsTUFBTUEsQ0FBQSxFQUFHO0lBQ0w7SUFDQSxNQUFNQyxXQUFXLEdBQUcsSUFBSSxDQUFDbkIsQ0FBQyxHQUFHTCxLQUFLLENBQUNXLElBQUk7SUFDdkMsTUFBTU0sS0FBSyxHQUFHLElBQUksQ0FBQ2QsSUFBSSxDQUFDc0IsSUFBSTtJQUU1QixJQUFJRCxXQUFXLEdBQUdQLEtBQUssRUFBRTtNQUNyQixJQUFJLENBQUNaLENBQUMsSUFBSSxJQUFJLENBQUNPLEdBQUc7TUFDbEIsSUFBSSxDQUFDQSxHQUFHLElBQUlaLEtBQUssQ0FBQ2EsT0FBTztJQUM3QixDQUFDLE1BQU07TUFDSCxJQUFJLENBQUNELEdBQUcsR0FBRyxDQUFDO0lBQ2hCO0VBQ0o7RUFFQWMsT0FBT0EsQ0FBQ3BCLEdBQUcsRUFBRTtJQUNULElBQUksQ0FBQ2lCLE1BQU0sQ0FBQyxDQUFDO0lBQ2IsSUFBSSxDQUFDSCxJQUFJLENBQUNkLEdBQUcsQ0FBQztFQUNsQjtFQUVBcUIsTUFBTUEsQ0FBQSxFQUFHO0lBQ0wsT0FBTztNQUNIQyxHQUFHLEVBQUUsSUFBSSxDQUFDdkIsQ0FBQyxHQUFHLElBQUksQ0FBQ0ssSUFBSTtNQUN2Qm1CLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQ3hCLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDSztJQUNoQyxDQUFDO0VBQ0w7QUFDSjtBQUVBLCtEQUFlVixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vMDFfanNfYmxvY2tzLy4vc3JjL2Jsb2NrLmpzPzc0NjQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQmxvY2sge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5nYW1lID0gb3B0aW9ucy5nYW1lO1xuICAgICAgICB0aGlzLnggPSBvcHRpb25zLng7XG4gICAgICAgIHRoaXMueSA9IG9wdGlvbnMueTtcbiAgICAgICAgdGhpcy5jdHggPSBvcHRpb25zLmN0eFxuICAgICAgICB0aGlzLmNvbG9yID0gQmxvY2suZ2V0UmFuZG9tQ29sb3IoQmxvY2suQ09MT1JTKTtcbiAgICAgICAgdGhpcy5kaW1zID0gQmxvY2suRElNUztcbiAgICAgICAgdGhpcy52ZWwgPSAwO1xuICAgIH1cblxuICAgIHN0YXRpYyBESU1TID0gNTA7XG4gICAgc3RhdGljIENPTE9SUyA9IFtcIiNGRjAwMDBcIiwgXCIjMDBGRjAwXCIsIFwiIzAwMDBGRlwiXTtcbiAgICBzdGF0aWMgR1JBVklUWSA9IDAuMDAwNTtcblxuICAgIHN0YXRpYyBnZXRSYW5kb21Db2xvcihhcnIpIHtcbiAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhcnIubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIGFycltyYW5kb21JbmRleF07XG4gICAgfVxuXG4gICAgZHJhdyhjdHgpIHtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMuY29sb3I7XG4gICAgICAgIGN0eC5maWxsUmVjdCh0aGlzLnggKiB0aGlzLmRpbXMsIHRoaXMueSAqIHRoaXMuZGltcywgdGhpcy5kaW1zLCB0aGlzLmRpbXMpO1xuICAgIH1cblxuICAgIHVwZGF0ZSgpIHtcbiAgICAgICAgLy8gZmxvb3IgY29sbGlzaW9uXG4gICAgICAgIGNvbnN0IGJsb2NrQm90dG9tID0gdGhpcy55ICsgQmxvY2suRElNUztcbiAgICAgICAgY29uc3QgZmxvb3IgPSB0aGlzLmdhbWUuZGltWTtcblxuICAgICAgICBpZiAoYmxvY2tCb3R0b20gPCBmbG9vcikge1xuICAgICAgICAgICAgdGhpcy55ICs9IHRoaXMudmVsO1xuICAgICAgICAgICAgdGhpcy52ZWwgKz0gQmxvY2suR1JBVklUWTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudmVsID0gMFxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGFuaW1hdGUoY3R4KSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIHRoaXMuZHJhdyhjdHgpO1xuICAgIH1cblxuICAgIGJvdW5kcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvcDogdGhpcy55ICogdGhpcy5kaW1zLFxuICAgICAgICAgICAgYm90dG9tOiAodGhpcy55ICsgMSkgKiB0aGlzLmRpbXNcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQmxvY2s7Il0sIm5hbWVzIjpbIkJsb2NrIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiZ2FtZSIsIngiLCJ5IiwiY3R4IiwiY29sb3IiLCJnZXRSYW5kb21Db2xvciIsIkNPTE9SUyIsImRpbXMiLCJESU1TIiwidmVsIiwiR1JBVklUWSIsImFyciIsInJhbmRvbUluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwiZHJhdyIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwidXBkYXRlIiwiYmxvY2tCb3R0b20iLCJkaW1ZIiwiYW5pbWF0ZSIsImJvdW5kcyIsInRvcCIsImJvdHRvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/block.js\n");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block.js */ \"./src/block.js\");\n\nclass Game {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.blocks = this.createMatrix(Game.NUM_COLS);\n    this.dimY = Game.DIM_Y;\n    this.addBlocks();\n    this.canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n  }\n  static NUM_COLS = 5;\n  static NUM_HEIGHT = 5; // how many blocks high a column can stack\n  static DIM_X = 250;\n  static DIM_Y = 250;\n  static BG_COLOR = \"#708090\";\n  createMatrix(cols) {\n    const matrix = [];\n    for (let i = 0; i < cols; i++) {\n      const col = [];\n      matrix.push(col);\n    }\n    return matrix;\n  }\n  add(colIdx, x, y) {\n    this.blocks[colIdx].push(new _block_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      game: this,\n      x: x,\n      y: y\n    }));\n  }\n  addBlocks() {\n    this.blocks.forEach((col, colIdx) => {\n      for (let stack = 0; stack < Game.NUM_HEIGHT; stack++) {\n        let x = colIdx;\n        let y = stack;\n        this.add(colIdx, x, y);\n      }\n    });\n  }\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    this.blocks.flat().forEach(block => {\n      block.draw(ctx);\n    });\n  }\n  handleCanvasClick(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n    console.log(\"Mouse Click Coordinates:\", mouseX, mouseY);\n    const clickedBlock = this.findBlockAt(mouseX, mouseY);\n    if (clickedBlock) {\n      console.log(\"Clicked Block:\", clickedBlock);\n      this.removeContiguousBlocks(clickedBlock);\n      this.draw(this.ctx);\n    }\n  }\n  findBlockAt(x, y) {\n    const colIndex = Math.floor(x / _block_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DIMS);\n    const rowIndex = Math.floor(y / _block_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DIMS);\n    if (colIndex < 0 || colIndex >= Game.NUM_COLS || rowIndex < 0 || rowIndex >= Game.NUM_HEIGHT) {\n      return null;\n    }\n    for (const block of this.blocks.flat()) {\n      if (block.x === colIndex && block.y === rowIndex) {\n        console.log(\"Find Block At:\", block);\n        return block;\n      }\n    }\n    return null;\n  }\n  removeBlock(x, y) {\n    const col = this.blocks[x];\n    // temporarily replacing the populated block with a placeholder\n    if (col && col[y]) {\n      col.splice(y, 1, new _block_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        game: this,\n        color: \"#708090\"\n      }));\n    }\n  }\n\n  // Function uses DFS to remove contiguous blocks\n  removeContiguousBlocks(startBlock) {\n    const stack = [];\n    const visited = new Set();\n    const blocksToRemove = [];\n    stack.push(startBlock);\n    while (stack.length > 0) {\n      const block = stack.pop();\n      const neighbors = this.getNeighbors(block);\n      for (const neighbor of neighbors) {\n        if (!visited.has(neighbor) && neighbor.color === startBlock.color) {\n          stack.push(neighbor);\n          visited.add(neighbor);\n        }\n      }\n      visited.add(block);\n      blocksToRemove.push(block);\n    }\n    if (blocksToRemove.length > 1) {\n      blocksToRemove.forEach(block => {\n        this.removeBlock(block.x, block.y);\n      });\n    }\n  }\n  getNeighbors(block) {\n    const neighbors = [];\n    const directions = [{\n      dx: 0,\n      dy: -1\n    },\n    // N\n    {\n      dx: 0,\n      dy: 1\n    },\n    // S\n    {\n      dx: 1,\n      dy: 0\n    },\n    // E\n    {\n      dx: -1,\n      dy: 0\n    } // W\n    ];\n\n    for (const dir of directions) {\n      const newX = block.x + dir.dx;\n      const newY = block.y + dir.dy;\n      if (this.validPosition(newX, newY)) {\n        const neighbor = this.blocks[newX][newY];\n        neighbors.push(neighbor);\n      }\n    }\n    return neighbors;\n  }\n  validPosition(x, y) {\n    return x >= 0 && x < Game.NUM_COLS && y >= 0 && y < Game.NUM_HEIGHT;\n  }\n  animate() {\n    this.ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    this.blocks.flat().forEach(block => {\n      block.animate(this.ctx);\n    });\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  checkCollision(block) {\n    const colIdx = block.x;\n    const currentBlockBounds = block.bounds();\n    const blocksInSameCol = this.blocks[colIdx];\n    for (const otherBlock of blocksInSameCol) {\n      if (otherBlock !== block) {\n        const otherBlockBounds = otherBlock.bounds();\n        if (currentBlockBounds.bottom > otherBlockBounds.top && currentBlockBounds.top < otherBlockBounds.bottom) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block.js */ \"./src/block.js\");\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game.js */ \"./src/game.js\");\n// Imports go here\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const game = new _game_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx, canvas);\n  game.animate();\n  // game.draw(ctx);\n  window.game = game;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDK0I7QUFDSDtBQUU1QkUsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFDNUMsWUFBVztFQUNQLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxjQUFjLENBQUMsYUFBYSxDQUFDO0VBQ3JELE1BQU1DLEdBQUcsR0FBR0YsTUFBTSxDQUFDRyxVQUFVLENBQUMsSUFBSSxDQUFDO0VBRW5DLE1BQU1DLElBQUksR0FBRyxJQUFJUCxnREFBSSxDQUFDSyxHQUFHLEVBQUVGLE1BQU0sQ0FBQztFQUVsQ0ksSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNkO0VBQ0FDLE1BQU0sQ0FBQ0YsSUFBSSxHQUFHQSxJQUFJO0FBQ3RCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLzAxX2pzX2Jsb2Nrcy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHMgZ28gaGVyZVxuaW1wb3J0IEJsb2NrIGZyb20gXCIuL2Jsb2NrLmpzXCI7XG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9nYW1lLmpzXCJcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixcbmZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2FtZS1jYW52YXNcIik7XG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxuICAgIGNvbnN0IGdhbWUgPSBuZXcgR2FtZShjdHgsIGNhbnZhcyk7XG5cbiAgICBnYW1lLmFuaW1hdGUoKVxuICAgIC8vIGdhbWUuZHJhdyhjdHgpO1xuICAgIHdpbmRvdy5nYW1lID0gZ2FtZTtcbn0pOyJdLCJuYW1lcyI6WyJCbG9jayIsIkdhbWUiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYW52YXMiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJnYW1lIiwiYW5pbWF0ZSIsIndpbmRvdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8wMV9qc19ibG9ja3MvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;